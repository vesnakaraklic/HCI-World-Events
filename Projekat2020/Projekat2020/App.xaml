<Application x:Class="Projekat2020.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Projekat2020"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="clrLightGray" Color="#e8e8e8" />
        <SolidColorBrush x:Key="clrBlue" Color="#2e82f0" />
        <SolidColorBrush x:Key="clrLightBlue" Color="#e6f0fc" />
        <SolidColorBrush x:Key="clrLightBlue100" Color="#8bb3f7" />
        <SolidColorBrush x:Key="clrDarkBlue" Color="#043f8c" />
        <SolidColorBrush x:Key="clrDarkBlue50" Color="#123f7a" />
        <SolidColorBrush x:Key="clrDarkBlue100" Color="#002d7a" />
        <SolidColorBrush x:Key="clrDarkBlue200" Color="#001945" />
        <SolidColorBrush x:Key="clrRed" Color="#ad0722" />
        <SolidColorBrush x:Key="clrDarkRed" Color="#700416" />
        <SolidColorBrush x:Key="clrGray" Color="#a1a1ab" />
        <Style x:Key="NormalText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue50}" />
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="12px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Width" Value="100"/>
        </Style>

        <Style x:Key="HeadingText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue200}" />
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ModalCancelButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue}" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource clrLightGray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="0,0,0,0" CornerRadius="4" BorderBrush="{StaticResource clrDarkBlue}" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrLightBlue}" />
                                <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clrDarkBlue100}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrLightBlue}" />
                                <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource clrDarkBlue100}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListEditButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Background" Value="{StaticResource clrDarkBlue}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="0,0,0,0" CornerRadius="4" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource clrLightBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightGray}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListDeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Background" Value="{StaticResource clrRed}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="0,0,0,0" CornerRadius="4" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkRed}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightGray}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkRed}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightGray}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#2e82f0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="0,0,0,3" CornerRadius="4" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HelpButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#2e82f0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBorder" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{StaticResource clrLightGray}"/>
            <Setter Property="Height" Value="250"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="0,0,0,3" CornerRadius="10" BorderThickness="5">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ArrowLeftRight_Button" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="0,0,0,0" BorderThickness="0">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource clrBlue}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource clrDarkBlue200}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="LightGray" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Dodaj_Button" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource clrDarkBlue}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrDarkBlue100}" />
                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LoginButtonDark" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#373737" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModalText" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ModalHeading" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="0 0 0 10" />
        </Style>
        <Style x:Key="WindowCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource clrRed}"/>
            <Setter Property="Background" Value="{StaticResource clrRed}"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="0 2 10 2" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="White" CornerRadius="10" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource clrRed}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderBrush" TargetName="border" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RegularText" TargetType="{x:Type TextBox}">
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Foreground" Value="{StaticResource clrDarkBlue100}"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="White" CornerRadius="10" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter"  Content="{TemplateBinding Text}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="{StaticResource clrLightBlue100}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="MenuOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="240"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="240"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="40"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <ItemsPanelTemplate x:Key="ListaResursa_Grid">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0"/>
        </ItemsPanelTemplate>
    </Application.Resources>
</Application>
